# Generated by Django 5.2.1 on 2025-07-24 16:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('players', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='player',
            name='hardware_info',
        ),
        migrations.RemoveField(
            model_name='player',
            name='ip_address',
        ),
        migrations.RemoveField(
            model_name='player',
            name='last_seen',
        ),
        migrations.RemoveField(
            model_name='player',
            name='mac_address',
        ),
        migrations.RemoveField(
            model_name='player',
            name='player_version',
        ),
        migrations.AddField(
            model_name='group',
            name='default_timezone',
            field=models.CharField(default='UTC', max_length=50),
        ),
        migrations.AddField(
            model_name='player',
            name='app_version',
            field=models.CharField(blank=True, help_text='App version (e.g., 1.2.3)', max_length=20),
        ),
        migrations.AddField(
            model_name='player',
            name='battery_level',
            field=models.PositiveIntegerField(blank=True, help_text='Battery percentage (0-100)', null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='connection_type',
            field=models.CharField(blank=True, choices=[('wifi', 'WiFi'), ('mobile', 'Mobile Data'), ('ethernet', 'Ethernet'), ('unknown', 'Unknown')], default='unknown', max_length=20),
        ),
        migrations.AddField(
            model_name='player',
            name='firmware_version',
            field=models.CharField(blank=True, help_text='Android version (e.g., 12)', max_length=20),
        ),
        migrations.AddField(
            model_name='player',
            name='last_sync_hash',
            field=models.CharField(blank=True, help_text='SHA256 hash for sync detection', max_length=64),
        ),
        migrations.AddField(
            model_name='player',
            name='signal_strength',
            field=models.IntegerField(blank=True, help_text='Signal strength in dBm (WiFi: -30 to -90, Mobile: -50 to -120)', null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='storage_free_mb',
            field=models.PositiveIntegerField(blank=True, help_text='Free storage in MB', null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='sync_fail_count',
            field=models.PositiveIntegerField(default=0, help_text='Consecutive sync failures'),
        ),
        migrations.AddField(
            model_name='player',
            name='temperature_celsius',
            field=models.IntegerField(blank=True, help_text='Device temperature in Celsius', null=True),
        ),
        migrations.AlterField(
            model_name='player',
            name='custom_orientation',
            field=models.CharField(blank=True, choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')], help_text='Override group orientation if needed', max_length=10),
        ),
        migrations.AlterField(
            model_name='player',
            name='custom_resolution',
            field=models.CharField(blank=True, choices=[('1920x1080', '1920x1080 (Full HD)'), ('1280x720', '1280x720 (HD)'), ('1024x768', '1024x768 (XGA)'), ('800x600', '800x600 (SVGA)')], help_text='Override group resolution if needed', max_length=20),
        ),
        migrations.AlterField(
            model_name='player',
            name='location',
            field=models.CharField(blank=True, help_text='Physical location description', max_length=200),
        ),
        migrations.AlterField(
            model_name='player',
            name='timezone',
            field=models.CharField(default='UTC', help_text='Device timezone (e.g., Europe/Madrid, America/New_York)', max_length=50),
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_id', models.CharField(help_text='Unique sync identifier', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial'), ('timeout', 'Timeout')], max_length=10)),
                ('assets_synced', models.PositiveIntegerField(default=0)),
                ('bytes_transferred', models.PositiveBigIntegerField(default=0)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('sync_hash', models.CharField(blank=True, max_length=64)),
                ('error_message', models.TextField(blank=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='players.player')),
            ],
            options={
                'verbose_name': 'Sync Log',
                'verbose_name_plural': 'Sync Logs',
                'ordering': ['-timestamp'],
            },
        ),
    ]
